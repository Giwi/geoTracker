buildscript {
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:1.2.4"
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.14.0'
    }
}
apply plugin: 'application'
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'com.github.ben-manes.versions'

def generateSrcPath="$buildDir/generated-src"
def generatedSrcDir = file("$buildDir/generated-src")
def version = '3.4.1'
mainClassName = 'org.giwi.geotracker.Main'
repositories {
    jcenter()
}
sourceSets {
    main {
        java.srcDirs += generatedSrcDir
        output.dir(builtBy: 'generateServiceProxy', generateSrcPath)
    }
}

if (!JavaVersion.current().java8Compatible) {
    throw new IllegalStateException('''A Haiku:
                                      |  This needs Java 8,
                                      |  You are using something else,
                                      |  Refresh. Try again.'''.stripMargin())
}

repositories {
    mavenCentral()
    maven {
        url = 'http://oss.sonatype.org/content/repositories/snapshots/'
    }
}

dependencies {
    compile "io.vertx:vertx-core:$version"
    compile "io.vertx:vertx-auth-mongo:$version"
    compile "io.vertx:vertx-mongo-client:$version"
    compile "io.vertx:vertx-web:$version"
    compile "io.vertx:vertx-service-proxy:$version"
    compile "io.vertx:vertx-codegen:$version"
    compile "io.vertx:vertx-auth-jwt:$version"
    compile 'org.reflections:reflections:0.9.11'
    compile 'org.apache.commons:commons-lang3:3.5'
    compile 'com.google.inject:guice:4.1.0'
    compile 'com.google.inject.extensions:guice-assistedinject:4.1.0'
    compile 'com.google.inject.extensions:guice-throwingproviders:4.1.0'
    testCompile "io.vertx:vertx-unit:$version"
    testCompile 'de.flapdoodle.embed:de.flapdoodle.embed.mongo:2.0.0'
    testCompile 'junit:junit:4.12'
    testCompile 'org.mock-server:mockserver-netty:3.10.5'
    testCompile 'com.jayway.restassured:rest-assured:2.9.0'
}

shadowJar {
    classifier = 'fat'
    manifest {
        attributes 'Main-Class': 'Main'
    }
    mergeServiceFiles {
        include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
    }
    doLast {
        copy {
            from "$buildDir/libs/"
            into "application/"
        }
    }
}

task generateServiceProxy(type: JavaCompile, description: 'Generates EBServiceProxies') {
    source = sourceSets.main.java
    classpath = configurations.compile
    destinationDir = generatedSrcDir
    options.compilerArgs = [
            "-proc:only",
            "-processor", "io.vertx.codegen.CodeGenProcessor",
            "-AoutputDirectory=$generateSrcPath"
    ]
}


compileJava.dependsOn generateServiceProxy

task dist() {

}